@using UniQode.Entities.Enums
@model UniQode.Models.Shared.NewsArticleModel

@using (Html.BeginForm("AddEdit", "News", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="panel @if (Model.State == State.Adding)
                      {
                          <text>panel-success</text>
                      }
                      else
                      {
                          <text>panel-default</text>
                      } ">
        <div class="panel-heading">
            <h4>
                @if (Model.State == State.Adding)
                {
                    <text>News article</text>
                    <span class="label label-success pull-right">NEW</span>
                }
                else
                {
                    <text>News article: </text> @Model.Title
                }
            </h4>
        </div>
        <div class="panel-body">
            @if (Model.State == State.Adding)
            {
                <div class="alert alert-info" role="alert">This is a new entry and will be lost if you you don´t save your changes!</div>
            }
            @if (Model.State != State.None && ViewData.ModelState.Keys.Any(k => ViewData.ModelState[k].Errors.Any()))
            {
                <div class="alert alert-danger">
                    <button class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                    @Html.ValidationSummary(false, "Errors: ")
                </div>
            }
            <div class="form-horizontal">
                <div class="form-group">
                    @Html.HiddenFor(m => m.Id, new {Name = "Id"})
                    @Html.HiddenFor(m => m.State, new {Name = "State"})
                    @Html.HiddenFor(m => m.Created, new { Name = "Created" })
                    @Html.HiddenFor(m => m.Modified, new { Name = "Modified" })
                    <div class="col-md-12" style="margin-bottom: 10px;">
                        @Html.LabelFor(m => m.Title)<br/>
                        @Html.TextBoxFor(m => m.Title, new {Name = "Title", @class = "form-control"})
                        @Html.ValidationMessageFor(m => m.Title)
                    </div>
                    <div class="col-md-12" style="margin-bottom: 10px;">
                        @Html.LabelFor(m => m.Category)<br />
                        @Html.TextBoxFor(m => m.Category, new { Name = "Category", @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Category)
                    </div>
                    <div class="col-md-12">
                        @Html.LabelFor(m => m.Body)<br/>
                        @Html.TextAreaFor(m => m.Body, new {Name = "Body", @class = "form-control", @rows = "12", @style = "max-width: 100%"})
                        @Html.ValidationMessageFor(m => m.Body)
                    </div>
                </div>
            </div>
            <div>
                <input name="action" type="submit" value="Publish" class="btn btn-success" title="Saves your changes and publishes them to the site"/>
                <input name="action" type="submit" value="Save" class="btn btn-warning" title="Saves your changes for previewing or working with later"/>
                <input name="action" type="submit" value="Preview" class="btn btn-info" title="Saves your changes and shows them in a preview state"/>
                @if (Model.State != State.Adding)
                {
                    <input name="action" type="submit" value="Delete" class="btn btn-danger" title="Deletes the entry altogether" onclick="return uniQode.confirmRemoval(event, 'news article');"/>
                }
            </div>
        </div>
    </div>
}
